AWSTemplateFormatVersion: "2010-09-09"
Description: Create ECS Service

Parameters:
  StageName:
    Type: String
    Default: dev
  ApplicationName:
    Type: String
    Default: httpd
  ApplicationImage:
    Type: String
    Default: 445386517627.dkr.ecr.us-east-2.amazonaws.com/application
  AppImageTag:
    Type: String
    Default: v2



Resources:
  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${StageName}-${ApplicationName}-EcsExecRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      ExecutionRoleArn: !Ref ECSExecutionRole
      Memory: 512
      NetworkMode: awsvpc
      Family: !Sub ${StageName}-${ApplicationName}-template
      ContainerDefinitions:
        - Name: !Sub ${StageName}-container
          Image: !Sub ${ApplicationImage}:${AppImageTag}
          MemoryReservation: 128
          PortMappings:
            - HostPort: 80
              Protocol: tcp
              ContainerPort: 80

  ECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/ecs/${StageName}-${ApplicationName}-template'
      RetentionInDays: 3  

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${StageName}-${ApplicationName}-TG
      Port: 80
      Protocol: HTTP
      VpcId: {"Fn::ImportValue": !Sub "${StageName}-${ApplicationName}-VPC"}
      TargetType: ip
      HealthCheckPath: '/var/www/html/index.html'
      HealthCheckIntervalSeconds: 10
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
  
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: {"Fn::ImportValue": !Sub "${StageName}-${ApplicationName}-ALB"}
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: {"Fn::ImportValue": !Sub "${StageName}-${ApplicationName}-ecs-cluster"}
      DesiredCount: 1
      ServiceName: !Sub "${StageName}-${ApplicationName}-ecs-service"
      TaskDefinition: !Ref ECSTaskDefinition
      LaunchType: FARGATE
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroup
          ContainerPort: 80
          ContainerName: !Sub ${StageName}-container
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - {"Fn::ImportValue": !Sub "${StageName}-${ApplicationName}-Application-SG"}
          Subnets:
            - {"Fn::ImportValue": !Sub "${StageName}-${ApplicationName}-PublicSubnet1"}


