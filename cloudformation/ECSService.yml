AWSTemplateFormatVersion: "2010-09-09"
Description: Create ECS Service

Parameters:
  StageName:
    Type: String
    Default: ecs-dev
  ApplicationName:
    Type: String
    Default: httpd
  ApplicationImage:
    Type: String
    Default: 445386517627.dkr.ecr.us-east-2.amazonaws.com/httpd-web
  AppImageTag:
    Type: String
    Default: v1



Resources:
  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${StageName}-${ApplicationName}-EcsExecRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      ExecutionRoleArn: !Ref ECSExecutionRole
      Memory: 512
      NetworkMode: awsvpc
      Family: !Sub ${StageName}-${ApplicationName}-template
      ContainerDefinitions:
        - Name: !Sub ${StageName}-container
          Image: !Sub ${ApplicationImage}:${AppImageTag}
          # LogConfiguration:
          #   LogDriver: awslogs
          #   Options:
          #     awslogs-group: {"Fn::ImportValue": !Sub "${StageName}-${ApplicationName}-ecs-log-group"}
          #     awslogs-region: !Ref "AWS::Region"
          #     awslogs-stream-prefix: "ecs-test"
          MemoryReservation: 128
          PortMappings:
            - HostPort: 80
              Protocol: tcp
              ContainerPort: 80
    
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: {"Fn::ImportValue": !Sub "${StageName}-${ApplicationName}-ecs-cluster"}
      DesiredCount: 1
      ServiceName: !Sub "${StageName}-${ApplicationName}-ecs-service"
      TaskDefinition: !Ref ECSTaskDefinition
      LaunchType: FARGATE
      LoadBalancers:
        - TargetGroupArn: {"Fn::ImportValue": !Sub "${StageName}-${ApplicationName}-TG"}
          ContainerPort: 80
          ContainerName: !Sub ${StageName}-container
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - "sg-0739f294e8aa8da02"
          Subnets:
            - "subnet-9e211df6"
            - "subnet-87b2d8fd"
            - "subnet-839a47cf"


